

from snakemake.utils import min_version

##### set minimum snakemake version #####

min_version("6.4.1")


##### setup config and necessary parameters #####


configfile: "config/config.yaml"


##### setup report #####


report: "report/workflow.rst"


##### setup singularity #####


# this container defines the underlying OS for each job when using the workflow
# with --use-conda --use-singularity
container: "docker://continuumio/miniconda3"


##### load rules #####
include: "rules/common.smk"
include: "rules/postprocess.smk"
include: "rules/preprocess.smk"

if config["aligner"] == "bwa-mem2":
    include: "rules/bwamem2.smk"

if config["aligner"] == "bowtie2":
    include: "rules/bowtie2.smk"

if config["aligner"] == "star":
    include: "rules/star.smk"

if config["aligner"] == "hisat2":
    include: "rules/hisat2.smk"

if config["aligner"] == "hisat3n":
    include: "rules/hisat3n.smk"

if config["aligner"] == "bismark":
    include: "rules/bisamrk.smk"

if config["aligner"] == "kallisto":
    include: "rules/kallisto.smk"
    include: "rules/transcriptome.smk"

if config["aligner"] == "salmon":
    include: "rules/salmon.smk"
    include: "rules/transcriptome.smk"



##### Target rule ######

if config["aligner"] == "salmon":

    rule all:
        input:
            expand("results/fastqc/{SID}_{read}.html", SID = SAMP_NAMES, read = READ_NAMES),
            expand("results/fastqc/{SID}_{read}_fastqc.zip", SID = SAMP_NAMES, read = READ_NAMES),
            expand("results/quant/{SID}/quant.sf", SID = SAMP_NAMES),
            expand("results/quant/{SID}/lib_format_counts.json", SID = SAMP_NAMES)

elif config["aligner"] == "kallisto":

    rule all:
        input:
            expand("results/fastqc/{SID}_{read}.html", SID = SAMP_NAMES, read = READ_NAMES),
            expand("results/fastqc/{SID}_{read}_fastqc.zip", SID = SAMP_NAMES, read = READ_NAMES),
            expand("results/kallisto_quant/{SID}/run_info.json", SID = SAMP_NAMES)

else:

    rule all:
        input:
            expand("results/fastqc/{SID}_{read}.html", SID = SAMP_NAMES, read = READ_NAMES),
            expand("results/fastqc/{SID}_{read}_fastqc.zip", SID = SAMP_NAMES, read = READ_NAMES),
            expand("results/alignment_stats/{SID}.bamstats", SID = SAMP_NAMES)

